{"version":3,"sources":["views/notFoundView/styles/NotFoundView.module.scss","views/MainView.module.scss","components/inputField/styles/InputField.module.scss","images/home-bg.jpg","views/weatherDetailsView/styles/WeatherDetailsView.module.scss","views/components/loader/styles/Loader.module.scss","views/components/citySearchForm/styles/CitySearchForm.module.scss","components/submitButton/styles/SubmitButton.module.scss","views/components/appLogo/styles/AppLogo.module.scss","serviceWorker.ts","common/routes.ts","views/homeView/HomeView.tsx","views/components/loader/Loader.tsx","views/weatherDetailsView/components/weatherDisplay/WeatherDisplay.tsx","views/weatherDetailsView/WeatherDetailsView.tsx","store/loading/actions.ts","store/loading/types.ts","views/notFoundView/NotFoundView.tsx","common/externalLinks.ts","helpers/historyHelper.ts","components/inputField/InputField.tsx","components/submitButton/SubmitButton.tsx","apiCalls/weatherApi.tsx","views/components/citySearchForm/CitySearchForm.tsx","store/city/actions.ts","store/city/types.ts","store/weather/actions.ts","store/weather/types.ts","views/components/appLogo/AppLogo.tsx","views/MainView.tsx","App.tsx","store/weather/reducers.ts","store/loading/reducers.ts","store/city/reducers.ts","store/index.ts","index.tsx","views/weatherDetailsView/components/weatherDisplay/styles/WeatherDisplay.module.scss","views/homeView/styles/HomeView.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","Routes","HomeView","state","isIE","componentDidMount","checkIfIsIe","isEdge","navigator","userAgent","indexOf","setState","className","styles","s_split","headersContainer","s_split__left","s_split__right","style","backgroundImage","this","bg","Component","Loader","lds_ripple","WeatherDisplay","weatherDisplay","props","loading","weatherDisplay__table","weatherDisplay__header","city","toUpperCase","weatherDisplay__descr","description","temperature","weatherDisplay_temp","feelslike","weatherDisplay__icon","src","icon","alt","WeatherDetailsView","details","weather","weather_descriptions","weather_icons","compareWeather","connect","isLoading","type","payload","NotFoundView","notFoundView","notFoundView__display","ExternalLinks","historyHelper","createBrowserHistory","InputField","name","value","label","placeholder","width","handleOnChange","hasErrors","inputContainer","input","border","onChange","SubmitButton","children","disabled","button","getWeatherForCity","fetch","commonUrl","concat","fetchParams","catch","error","then","res","json","getCompareWeather","compareTo","proxy","api","process","method","headers","toCompare","toLowerCase","CitySearchForm","citySearch","cityHasErrors","formValid","handleTextInputChange","e","target","validateForm","cityNameValid","length","showFormErrors","handleSubmit","preventDefault","whatCity","a","async","console","data","current","push","success","cityNotFound","whatWeather","form","onSubmit","AppLogo","href","h1","MainView","heightRef","React","createRef","height","calculateMainHeight","winHeight","innerHeight","Math","max","document","documentElement","clientHeight","body","ref","s_header","s_main","history","exact","path","mainView","weatherDetailsView","render","params","from","to","App","initialState","undefined","initialCompareState","rootReducer","combineReducers","action","store","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,SAAS,6BAA6B,mBAAmB,uCAAuC,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,aAAe,mCAAmC,sBAAwB,8C,oBCAlSD,EAAOC,QAAU,CAAC,SAAS,yBAAyB,mBAAmB,mCAAmC,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,SAAW,2BAA2B,OAAS,2B,oBCAnPD,EAAOC,QAAU,CAAC,SAAS,2BAA2B,mBAAmB,qCAAqC,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,yBAAyB,eAAiB,mCAAmC,aAAe,iCAAiC,MAAQ,4B,oBCD1TD,EAAOC,QAAU,IAA0B,qC,oBCC3CD,EAAOC,QAAU,CAAC,SAAS,mCAAmC,mBAAmB,6CAA6C,OAAO,iCAAiC,OAAO,iCAAiC,OAAO,iCAAiC,QAAU,sC,oBCAhQD,EAAOC,QAAU,CAAC,WAAa,6B,oBCA/BD,EAAOC,QAAU,CAAC,SAAS,+BAA+B,mBAAmB,yCAAyC,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,KAAO,+B,oBCAzOD,EAAOC,QAAU,CAAC,SAAS,6BAA6B,mBAAmB,uCAAuC,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,OAAS,+B,oBCAjOD,EAAOC,QAAU,CAAC,SAAS,wBAAwB,mBAAmB,kCAAkC,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,GAAK,sB,kHCWhLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,IClBMC,E,oGCICC,EAAb,2MAEIC,MAAQ,CACJC,MAAM,GAHd,EAMIC,kBAAoB,WAChB,EAAKC,eAPb,EAUIA,YAAc,WACV,IAAMC,GAAyD,IAAhDV,OAAOW,UAAUC,UAAUC,QAAQ,QAC5CN,GAA0D,IAAnDP,OAAOW,UAAUC,UAAUC,QAAQ,aAAsBH,EACtE,EAAKI,SAAS,CAAEP,UAbxB,wEAgBQ,OACI,oCACI,6BAASQ,UAAWC,IAAOC,SACvB,6BAASF,UAAS,UAAKC,IAAOE,iBAAZ,YAAgCF,IAAOG,gBACrD,wBAAIJ,UAAS,QAAb,gDACA,wBAAIA,UAAS,QAAb,wDAGJ,6BAASA,UAAS,UAAKC,IAAOI,gBAAkBC,MAAO,CAAEC,gBAAiBC,KAAKjB,MAAMC,KAAO,GAAlB,cAA8BiB,IAA9B,cAxB9F,GAA8BC,a,oCCDjBC,EAAS,WAClB,OACI,yBAAKX,UAAS,UAAKC,IAAOW,aAAc,8BAAW,gC,iBCA9CC,EAAb,iLAEQ,OACI,yBAAKb,UAAWC,IAAOa,gBAClBN,KAAKO,MAAMC,QACR,kBAAC,EAAD,MAEA,oCACI,yBAAKhB,UAAWC,IAAOgB,uBACnB,wBAAIjB,UAAS,iBAAYC,IAAOiB,yBAA2BV,KAAKO,MAAMI,KAAKC,eAC3E,uBAAGpB,UAAS,iBAAYC,IAAOoB,wBAA0Bb,KAAKO,MAAMO,aACnEd,KAAKO,MAAMQ,YAER,uBAAGvB,UAAS,iBAAYC,IAAOuB,sBAAwBhB,KAAKO,MAAMQ,YAAlE,qBAAkGf,KAAKO,MAAMU,UAA7G,WAEA,6BAGR,yBAAKzB,UAAWC,IAAOyB,qBAAsBC,IAAKnB,KAAKO,MAAMa,KAAMC,IAAKrB,KAAKO,MAAMO,oBAlB3G,GAAoCZ,a,QCE9BoB,E,iLAEE,OACI,6BAAS9B,UAAS,UAAKC,IAAO8B,UAC1B,kBAAC,EAAD,CACIf,QAASR,KAAKO,MAAMC,QAAQA,QAC5BG,KAAMX,KAAKO,MAAMI,KAAKA,KACtBG,YAAad,KAAKO,MAAMiB,QAAQC,qBAAqB,GACrDV,YAAaf,KAAKO,MAAMiB,QAAQT,YAChCE,UAAWjB,KAAKO,MAAMiB,QAAQP,UAC9BG,KAAMpB,KAAKO,MAAMiB,QAAQE,cAAc,KAC3C,kBAAC,EAAD,CACIlB,QAASR,KAAKO,MAAMC,QAAQA,QAC5BG,KAAMX,KAAKO,MAAMoB,eAAehB,KAChCG,YAAad,KAAKO,MAAMoB,eAAeF,qBAAqB,GAC5DV,YAAaf,KAAKO,MAAMoB,eAAeZ,YACvCE,UAAWjB,KAAKO,MAAMoB,eAAeV,UACrCG,KAAMpB,KAAKO,MAAMoB,eAAeD,cAAc,U,GAjBjCxB,aA8BlB0B,eAPS,SAAC7C,GAAD,MAAsB,CAC1CyB,QAASzB,EAAMyB,QACfG,KAAM5B,EAAM4B,KACZa,QAASzC,EAAMyC,QACfG,eAAgB5C,EAAM4C,kBAGXC,CAAyBN,G,kBCnC3BO,EAAY,SAACA,GACtB,MAAO,CACHC,KCAe,UDCfC,QAASF,IEEXG,E,2MACF/C,kBAAoB,WAChB,EAAKsB,MAAMsB,UAAU,CAAErB,SAAS,K,wEAIhC,OACI,6BAAShB,UAAWC,IAAOwC,cACvB,yBAAKzC,UAAWC,IAAOyC,uBACnB,uBAAG1C,UAAU,UAAb,oCAAwDQ,KAAKO,MAAMI,KAAKA,KAAOX,KAAKO,MAAMI,KAAKA,KAAO,OAAtG,UACA,uBAAGnB,UAAU,UAAb,mC,GAVOU,aAsBZ0B,eALS,SAAC7C,GAAD,MAAsB,CAC1C4B,KAAM5B,EAAM4B,KACZH,QAASzB,EAAMyB,WAGqB,CAAEqB,aAA3BD,CAAwCI,I,SP7B3CnD,K,aAAAA,E,iCAAAA,E,iCAAAA,M,SQAAsD,E,QCECC,EAAgBC,c,qDCEhBC,EAAa,SAAC,GAA8F,IAA5FC,EAA2F,EAA3FA,KAAMT,EAAqF,EAArFA,KAAMU,EAA+E,EAA/EA,MAAOC,EAAwE,EAAxEA,MAAOC,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,UACvF,OACI,oCACI,yBAAKrD,UAAWC,IAAOqD,gBAClBL,EAAQ,+BAAQA,GAAiB,KAClC,2BACIjD,UAAS,iBAAYC,IAAOsD,OAC5BR,KAAMA,EACNT,KAAMA,EACNU,MAAOA,EACPE,YAAaA,GAA4B,GACzC5C,MAAO,CAAE6C,MAAOA,GAAgB,GAAIK,OAAQH,EAAY,gBAAkB,IAC1EI,SAAUL,O,oCCZjBM,EAAe,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SACrC,OACI,4BACI5D,UAAS,2BAAsBC,IAAO4D,QACtCvB,KAAK,SACLsB,SAAUA,GAETA,EAAW,UAAYD,K,SHXxBhB,K,mCAAAA,E,6CAAAA,M,KIGL,IAAMmB,EAAoB,SAAC3C,GAM9B,OALiB4C,MAAM,GAAD,OAAIC,EAAUC,OAAO9C,IAAS+C,KAE/CC,OAAM,SAAAC,GAAK,OAAIA,KACfC,MAAK,SAACC,GAAD,OAAcA,EAAIC,UACvBF,MAAK,SAACC,GAAD,OAAcA,MAKfE,EAAoB,SAACrD,GAM9B,OALiB4C,MAAM,GAAD,OAAIC,EAAUC,OAAOQ,EAAUtD,KAAU+C,KAE1DC,OAAM,SAAAC,GAAK,OAAIA,KACfC,MAAK,SAACC,GAAD,OAAcA,EAAIC,UACvBF,MAAK,SAACC,GAAD,OAAcA,MAKtBN,EAAS,UAAMrB,EAAc+B,MAApB,YAA6B/B,EAAcgC,IAA3C,+BAAqEC,mCAArE,WAETV,EAAc,WAChB,MAAO,CACHW,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAKtBL,EAAY,SAACtD,GACf,IAAI4D,EAAoB,SAExB,OAAQ5D,EAAK6D,eACT,IAAK,SACDD,EAAY,SACZ,MACJ,IAAK,SACDA,EAAY,SAIpB,OAAOA,GC7BLE,E,2MACF1F,MAAQ,CACJ2F,WAAY,GACZC,eAAe,EACfC,WAAW,G,EAGfC,sBAAwB,SAACC,GAErB,EAAKvF,SAAS,CACVmF,WAAYI,EAAEC,OAAOvC,QACtB,WACC,EAAKwC,mB,EAIbC,cAAgB,WACZ,OAAO,EAAKlG,MAAM2F,WAAWQ,QAAU,G,EAG3CF,aAAe,WACX,EAAKzF,SAAS,CAAEqF,UAAW,EAAKK,mB,EAGpCE,eAAiB,WACb,EAAK5F,SAAS,CAAEoF,eAAgB,EAAKM,mB,EAGzCG,aAAe,SAACN,GACZA,EAAEO,iBACF,EAAKF,iBAED,EAAKpG,MAAM6F,YACX,EAAKrE,MAAM+E,SAAS,CAAE3E,KAAM,EAAK5B,MAAM2F,aACvC,EAAKpB,kBAAkB,EAAKvE,MAAM2F,c,EAI1CV,kBAAoB,SAAOrD,GAAP,SAAA4E,EAAAC,OAAA,kEAAAD,EAAA,MACVvB,EAAkBrD,GAEnBgD,OAAM,SAACC,GAAD,OAAgB6B,QAAQ7B,MAAMA,MACpCC,MAAK,SAACC,GACH,EAAKvD,MAAMsB,UAAU,CAAErB,SAAS,IAChC,IAAMkF,EAAO5B,EAAI6B,QAEjB,EAAKpF,MAAMoB,eAAe,CACtBZ,YAAa2E,EAAK3E,YAClBW,cAAegE,EAAKhE,cACpBD,qBAAsBiE,EAAKjE,qBAC3BR,UAAWyE,EAAKzE,UAChBN,KAAMmD,EAAIpF,SAAS6D,WAbf,sC,EAmBpBe,kBAAoB,SAAO3C,GAAP,SAAA4E,EAAAC,OAAA,uDAChB,EAAKjF,MAAMsB,UAAU,CAAErB,SAAS,IAChC4B,EAAcwD,KAAd,gBAA4B,EAAK7G,MAAM2F,aAFvB,WAAAa,EAAA,MAIVjC,EAAkB3C,GAEnBgD,OAAM,SAACC,GACJ6B,QAAQ7B,MAAMA,GACd,EAAKrD,MAAMsB,UAAU,CAAErB,SAAS,OAEnCqD,MAAK,SAACC,GACH,IAAoB,IAAhBA,EAAI+B,QACJzD,EAAcwD,KAAd,UAAsB/G,EAAOiH,oBAC1B,GAAIhC,EAAI6B,QAAS,CACpB,IAAMD,EAAO5B,EAAI6B,QAEjB,EAAKpF,MAAMwF,YAAY,CACnBhF,YAAa2E,EAAK3E,YAClBW,cAAegE,EAAKhE,cACpBD,qBAAsBiE,EAAKjE,qBAC3BR,UAAWyE,EAAKzE,YAGpB,EAAK+C,kBAAkBrD,QAvBnB,sC,wEA6BhB,OACI,0BACInB,UAAWC,IAAOuG,KAClBC,SAAUjG,KAAKoF,cAEf,kBAAC,EAAD,CACItD,KAAK,OACLS,KAAK,aACLC,MAAOxC,KAAKjB,MAAM2F,WAClBhC,YAAY,UACZC,MAAM,QACNC,eAAgB5C,KAAK6E,sBACrBhC,UAAW7C,KAAKjB,MAAM4F,gBAE1B,kBAAC,EAAD,CACIvB,SAAUpD,KAAKO,MAAMC,QAAQA,SADjC,e,GApGaN,aAkHd0B,gBAJS,SAAC7C,GAAD,MAAsB,CAC1CyB,QAASzB,EAAMyB,WAGqB,CAAE8E,SChIlB,SAAC3E,GACrB,MAAO,CACHmB,KCDY,ODEZC,QAASpB,ID6HmCkB,YAAWkE,YGjIpC,SAACvE,GACxB,MAAO,CACHM,KCMe,UDLfC,QAASP,IH8H2DG,eG1H9C,SAACH,GAC3B,MAAO,CACHM,KCAuB,kBDCvBC,QAASP,KHuHFI,CAA+E6C,G,qBKhIjFyB,GAAU,WACnB,OACI,uBAAGC,KAAK,IAAI3G,UAAS,eAAUC,KAAO2G,KAAtC,2BCMKC,GAAb,2MACYC,UAAYC,IAAMC,YAD9B,EAGIzH,MAAQ,CACJ0H,OAAQ,QACRzH,MAAM,GALd,EAQIC,kBAAoB,WAChB,EAAKyH,uBATb,EAYIA,oBAAsB,WAClB,IAAMC,EAAYlI,OAAOmI,aAAeC,KAAKC,IAAIC,SAASC,gBAAgBC,aAAcF,SAASG,KAAKD,cACtG,EAAK1H,SAAS,CACVkH,OAAO,GAAD,OAAKE,EAAY,EAAKL,UAAUX,QAASsB,aAAzC,SAflB,wEAoBQ,OACI,oCACI,4BAAQE,IAAKnH,KAAKsG,UAAW9G,UAAWC,IAAO2H,UAC3C,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,0BAAM5H,UAAWC,IAAO4H,OAAQvH,MAAO,CAAE2G,OAAQzG,KAAKjB,MAAM0H,SACxD,kBAAC,IAAD,CAAQa,QAASlF,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAM3I,EAAO4I,UACtB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAM3I,EAAO6I,mBAAoBC,OAAQ,SAACC,GAAD,OAAY,kBAAC,EAAuBA,MAE1F,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAM3I,EAAOiH,cACtB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAU+B,KAAK,IAAIC,GAAIjJ,EAAO4I,mBArC1D,GAA8BvH,aCFf6H,GANH,WACV,OACE,kBAAC,GAAD,O,uCCHEC,GAAmC,CACrCjH,iBAAakH,EACbvG,cAAe,GACfD,qBAAsB,GACtBR,eAAWgH,GAGTC,GAAiD,CACnDnH,YAAa,EACbW,cAAe,GACfD,qBAAsB,GACtBR,UAAW,EACXN,KAAM,ICZJqH,GAAmC,CACrCxH,SAAS,GCAPwH,GAAgC,CAClCrH,KAAM,I,6BCIJwH,GAAcC,2BAAgB,CAChC5H,QFH0B,WAA2E,IAA1EzB,EAAyE,uDAAjEiJ,GAAcK,EAAmD,uCACpG,OAAQA,EAAOvG,MACX,IhBJe,UgBKX,OAAO,gBACA/C,EADP,GAEOsJ,EAAOtG,SAGlB,QACI,OAAOhD,IELf4B,KDHuB,WAAoD,IAAnD5B,EAAkD,uDAA1CiJ,GAAcK,EAA4B,uCAC1E,OAAQA,EAAOvG,MACX,IRLY,OQMR,OAAO,gBACA/C,EADP,GAEOsJ,EAAOtG,SAElB,QACI,OAAOhD,ICJfyC,QHM0B,WAA2E,IAA1EzC,EAAyE,uDAAjEiJ,GAAcK,EAAmD,uCACpG,OAAQA,EAAOvG,MACX,IJTe,UIUX,OAAO,gBACA/C,EADP,GAEOsJ,EAAOtG,SAElB,QACI,OAAOhD,IGbf4C,eHiBiC,WAAgG,IAA/F5C,EAA8F,uDAAtFmJ,GAAqBG,EAAiE,uCAChI,OAAQA,EAAOvG,MACX,IJpBuB,kBIqBnB,OAAO,gBACA/C,EADP,GAEOsJ,EAAOtG,SAElB,QACI,OAAOhD,MI1BbuJ,GDMwB,WAC1B,IAAMC,EAAc,CAACC,MACfC,EAAqBC,mBAAe,WAAf,EAAmBH,GAO9C,OALcI,uBACVR,GACAS,+BAAoBH,ICZdI,GAEdC,KAASnB,OACL,kBAAC,IAAD,CAAUW,MAAOA,IACb,kBAAC,GAAD,OAGJvB,SAASgC,eAAe,S1ByHtB,kBAAmB3J,WACrBA,UAAU4J,cAAcC,MAAMpF,MAAK,SAAAqF,GACjCA,EAAaC,iB,mB2B5InB7K,EAAOC,QAAU,CAAC,SAAS,+BAA+B,mBAAmB,yCAAyC,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,eAAiB,uCAAuC,qBAAuB,6CAA6C,sBAAwB,8CAA8C,uBAAyB,+CAA+C,uBAAyB,+CAA+C,sBAAwB,gD,mBCA5kBD,EAAOC,QAAU,CAAC,SAAS,yBAAyB,mBAAmB,mCAAmC,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,QAAU,0BAA0B,cAAgB,gCAAgC,eAAiB,iCAAiC,iBAAmB,sC","file":"static/js/main.bcc44c85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"NotFoundView_f-text__3reFn\",\"f-text__semibold\":\"NotFoundView_f-text__semibold__1rYwD\",\"f-h1\":\"NotFoundView_f-h1__3FZd5\",\"f-h2\":\"NotFoundView_f-h2__en3F0\",\"f-h3\":\"NotFoundView_f-h3__xni-W\",\"notFoundView\":\"NotFoundView_notFoundView__1IS9o\",\"notFoundView__display\":\"NotFoundView_notFoundView__display__yb9q-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"MainView_f-text__3GYp4\",\"f-text__semibold\":\"MainView_f-text__semibold__3TkFl\",\"f-h1\":\"MainView_f-h1__1ShTF\",\"f-h2\":\"MainView_f-h2__3ZAfp\",\"f-h3\":\"MainView_f-h3__25XrU\",\"s_header\":\"MainView_s_header__1KI6T\",\"s_main\":\"MainView_s_main__JRslI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"InputField_f-text__2pABG\",\"f-text__semibold\":\"InputField_f-text__semibold__1n-vN\",\"f-h1\":\"InputField_f-h1__SVVkw\",\"f-h2\":\"InputField_f-h2__l9-TE\",\"f-h3\":\"InputField_f-h3__3lq9M\",\"inputContainer\":\"InputField_inputContainer__29TLO\",\"errorMessage\":\"InputField_errorMessage__2bUtJ\",\"input\":\"InputField_input__1IzVg\"};","module.exports = __webpack_public_path__ + \"static/media/home-bg.1cdffe7f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"WeatherDetailsView_f-text__3X0jQ\",\"f-text__semibold\":\"WeatherDetailsView_f-text__semibold__CRUNv\",\"f-h1\":\"WeatherDetailsView_f-h1__1snD_\",\"f-h2\":\"WeatherDetailsView_f-h2__1rwc5\",\"f-h3\":\"WeatherDetailsView_f-h3__17w1E\",\"details\":\"WeatherDetailsView_details__2WNSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_ripple\":\"Loader_lds_ripple__2dNUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"CitySearchForm_f-text__XVaR8\",\"f-text__semibold\":\"CitySearchForm_f-text__semibold__2eM3i\",\"f-h1\":\"CitySearchForm_f-h1__3zPRL\",\"f-h2\":\"CitySearchForm_f-h2__2-Srt\",\"f-h3\":\"CitySearchForm_f-h3__3gIa1\",\"form\":\"CitySearchForm_form__3TCs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"SubmitButton_f-text__2NiIt\",\"f-text__semibold\":\"SubmitButton_f-text__semibold__35xWl\",\"f-h1\":\"SubmitButton_f-h1__2gY7E\",\"f-h2\":\"SubmitButton_f-h2__21St1\",\"f-h3\":\"SubmitButton_f-h3__-V_q4\",\"button\":\"SubmitButton_button__1rZSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"AppLogo_f-text__Bov47\",\"f-text__semibold\":\"AppLogo_f-text__semibold__5p4q-\",\"f-h1\":\"AppLogo_f-h1__38oQZ\",\"f-h2\":\"AppLogo_f-h2__3BVyB\",\"f-h3\":\"AppLogo_f-h3__3J639\",\"h1\":\"AppLogo_h1__35Xt_\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum Routes {\n    mainView = '/',\n    weatherDetailsView = '/city/:city',\n    cityNotFound = '/city-not-found/'\n}","import React, { Component } from 'react';\nimport styles from './styles/HomeView.module.scss';\nimport bg from '../../images/home-bg.jpg';\n\nexport class HomeView extends Component {\n\n    state = {\n        isIE: false,\n    }\n\n    componentDidMount = () => {\n        this.checkIfIsIe();\n    }\n\n    checkIfIsIe = () => {\n        const isEdge = window.navigator.userAgent.indexOf('Edge') !== -1;\n        const isIE = window.navigator.userAgent.indexOf('Trident') !== -1 && !isEdge;\n        this.setState({ isIE });\n    }\n    render() {\n        return (\n            <>\n                <section className={styles.s_split}>\n                    <article className={`${styles.headersContainer} ${styles.s_split__left}`}>\n                        <h3 className={`f-h3`}>Do you want to know if you need an umbrella?</h3>\n                        <h2 className={`f-h2`}>Type a city name and check the weather in a second!</h2>\n                    </article>\n                    {/* TODO: image lazyloading */}\n                    <article className={`${styles.s_split__right}`} style={{ backgroundImage: this.state.isIE ? '' : `url(${bg})`}}></article>\n                </section>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport styles from './styles/Loader.module.scss';\n\nexport const Loader = () => {\n    return (\n        <div className={`${styles.lds_ripple}`}><div></div><div></div></div>\n    )\n}\n","import React, { Component } from 'react'\nimport { Loader } from '../../../components/loader/Loader';\nimport styles from './styles/WeatherDisplay.module.scss';\nimport { IWeatherDisplayProps } from './interfaces/IWeatherDisplayProps';\n\nexport class WeatherDisplay extends Component<IWeatherDisplayProps> {\n    render() {\n        return (\n            <div className={styles.weatherDisplay}>\n                {this.props.loading ?\n                    <Loader />\n                    :\n                    <>\n                        <div className={styles.weatherDisplay__table}>\n                            <h6 className={`f-text ${styles.weatherDisplay__header}`}>{this.props.city.toUpperCase()}</h6>\n                            <p className={`f-text ${styles.weatherDisplay__descr}`}>{this.props.description}</p>\n                            {this.props.temperature\n                                ?\n                                <p className={`f-text ${styles.weatherDisplay_temp}`}>{this.props.temperature}&deg;C (feels like {this.props.feelslike}&deg;C )</p>\n                                :\n                                <p></p>\n                            }\n                        </div>\n                        <img className={styles.weatherDisplay__icon} src={this.props.icon} alt={this.props.description} />\n                    </>\n                }\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport styles from './styles/WeatherDetailsView.module.scss';\nimport { WeatherDisplay } from './components/weatherDisplay/WeatherDisplay';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../store';\nimport { IWeatherDetailsViewProps } from './interfaces/IWeatherDetailsViewProps';\n\nclass WeatherDetailsView extends Component<IWeatherDetailsViewProps> {\n    render() {\n        return (\n            <section className={`${styles.details}`}>\n                <WeatherDisplay\n                    loading={this.props.loading.loading}\n                    city={this.props.city.city}\n                    description={this.props.weather.weather_descriptions[0]}\n                    temperature={this.props.weather.temperature}\n                    feelslike={this.props.weather.feelslike}\n                    icon={this.props.weather.weather_icons[0]} />\n                <WeatherDisplay\n                    loading={this.props.loading.loading}\n                    city={this.props.compareWeather.city}\n                    description={this.props.compareWeather.weather_descriptions[0]}\n                    temperature={this.props.compareWeather.temperature}\n                    feelslike={this.props.compareWeather.feelslike}\n                    icon={this.props.compareWeather.weather_icons[0]} />\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    loading: state.loading,\n    city: state.city,\n    weather: state.weather,\n    compareWeather: state.compareWeather\n})\n\nexport default connect(mapStateToProps)(WeatherDetailsView);\n","import { IReduxLoadingState, LOADING } from './types';\n\nexport const isLoading = (isLoading: IReduxLoadingState) => {\n    return {\n        type: LOADING,\n        payload: isLoading\n    }\n}\n","export interface IReduxLoadingState {\n    loading: boolean;\n}\n\nexport const LOADING = 'LOADING';\n\ninterface IReduxLoadingAction {\n    type: typeof LOADING;\n    payload: IReduxLoadingState;\n}\n\nexport type LoadingActionTypes = IReduxLoadingAction;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { AppState } from '../../store';\nimport { INotFoundViewProps } from './interfaces/INotFoundViewProps';\nimport styles from './styles/NotFoundView.module.scss';\nimport { isLoading } from '../../store/loading/actions';\n\nclass NotFoundView extends Component<INotFoundViewProps> {\n    componentDidMount = () => {\n        this.props.isLoading({ loading: false })\n    }\n\n    render() {\n        return (\n            <section className={styles.notFoundView}>\n                <div className={styles.notFoundView__display}>\n                    <p className='f-text'>We couldn't find the weather for {this.props.city.city ? this.props.city.city : 'your'} city.</p>\n                    <p className='f-text'>Do you want to try again?</p>\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    city: state.city,\n    loading: state.loading\n})\n\nexport default connect(mapStateToProps, { isLoading })(NotFoundView);\n","export enum ExternalLinks {\n    api = 'http://api.weatherstack.com/',\n    proxy= 'https://cors-anywhere.herokuapp.com'\n}","import { createBrowserHistory } from 'history';\n\nexport const historyHelper = createBrowserHistory();","import React from 'react'\nimport { IInputField } from './interfaces/IInputField';\nimport styles from './styles/InputField.module.scss';\n\nexport const InputField = ({ name, type, value, label, placeholder, width, handleOnChange, hasErrors }: IInputField) => {\n    return (\n        <>\n            <div className={styles.inputContainer}>\n                {label ? <label>{label}</label> : null}\n                <input\n                    className={`f-text ${styles.input}`}\n                    name={name}\n                    type={type}\n                    value={value}\n                    placeholder={placeholder ? placeholder : ''}\n                    style={{ width: width ? width : '', border: hasErrors ? '1px solid red' : '' }}\n                    onChange={handleOnChange}\n                />\n            </div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { ISubmitButton } from './interfaces/ISubmitButton';\nimport styles from './styles/SubmitButton.module.scss';\n\nexport const SubmitButton = ({ children, disabled }: ISubmitButton) => {\n    return (\n        <button\n            className={`f-text__semibold ${styles.button}`}\n            type=\"submit\"\n            disabled={disabled}\n        >\n            {disabled ? 'loading' : children}\n        </button>\n    )\n}\n","import { ExternalLinks } from \"../common/externalLinks\";\n\n// TODO: INTERFACE FOR API RESPONSE - should not be any type\nexport const getWeatherForCity = (city: string): any => {\n    const response = fetch(`${commonUrl.concat(city)}`, fetchParams())\n        // TODO: ERROR HANDLING, TYPES FOR RESPONSES\n        .catch(error => error)\n        .then((res: any) => res.json())\n        .then((res: any) => res)\n    return response;\n}\n\n// Due to the fact that API I have choosen dosen't have location randomize method, I always compare weather to Warsaw. If users wants to know the weather in Warsaw - I compare to Cracow.\nexport const getCompareWeather = (city: string): any => {\n    const response = fetch(`${commonUrl.concat(compareTo(city))}`, fetchParams())\n        // TODO: ERROR HANDLING, TYPES FOR RESPONSES\n        .catch(error => error)\n        .then((res: any) => res.json())\n        .then((res: any) => res)\n    return response;\n}\n\n// =================\nconst commonUrl = `${ExternalLinks.proxy}/${ExternalLinks.api}/current?access_key=${process.env.REACT_APP_API_KEY}&query=`;\n\nconst fetchParams = () => {\n    return {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    }\n}\n\nconst compareTo = (city: string): string => {\n    let toCompare: string = 'warsaw';\n\n    switch (city.toLowerCase()) {\n        case 'warsaw' || 'warszawa':\n            toCompare = 'Cracow';\n            break;\n        case 'cracow' || 'krakow' || 'kraków':\n            toCompare = 'Warsaw';\n            break;\n    }\n\n    return toCompare;\n}\n\n\n\n\n\n\n\n","import React, { Component, ChangeEvent } from 'react'\nimport { InputField } from '../../../components/inputField/InputField';\nimport styles from './styles/CitySearchForm.module.scss';\nimport { SubmitButton } from '../../../components/submitButton/SubmitButton';\nimport { historyHelper } from '../../../helpers/historyHelper';\nimport { getWeatherForCity, getCompareWeather } from '../../../apiCalls/weatherApi';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../store';\nimport { whatCity } from '../../../store/city/actions';\nimport { isLoading } from '../../../store/loading/actions';\nimport { whatWeather } from '../../../store/weather/actions';\nimport { compareWeather } from '../../../store/weather/actions';\nimport { Routes } from '../../../common/routes';\nimport { ICitySearchFormProps } from './interfaces/ICitySearchFormProps';\nimport { ICitySearchFormState } from './interfaces/ICitySearchFormState';\n\n\nclass CitySearchForm extends Component<ICitySearchFormProps, ICitySearchFormState> {\n    state = {\n        citySearch: '',\n        cityHasErrors: false,\n        formValid: false,\n    }\n\n    handleTextInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        // TODO: prevent from typing numbers \n        this.setState({\n            citySearch: e.target.value,\n        }, () => {\n            this.validateForm();\n        });\n    }\n\n    cityNameValid = (): boolean => {\n        return this.state.citySearch.length >= 2;\n    }\n\n    validateForm = (): void => {\n        this.setState({ formValid: this.cityNameValid() })\n    }\n\n    showFormErrors = (): void => {\n        this.setState({ cityHasErrors: !this.cityNameValid() })\n    }\n\n    handleSubmit = (e: React.FormEvent): void => {\n        e.preventDefault();\n        this.showFormErrors();\n\n        if (this.state.formValid) {\n            this.props.whatCity({ city: this.state.citySearch });\n            this.getWeatherForCity(this.state.citySearch);\n        }\n    }\n\n    getCompareWeather = async (city: string) => {\n        await getCompareWeather(city)\n            // TODO: ERROR HANDLING, TYPES FOR RESPONSES\n            .catch((error: any) => console.error(error))\n            .then((res: any) => {\n                this.props.isLoading({ loading: false });\n                const data = res.current;\n\n                this.props.compareWeather({\n                    temperature: data.temperature,\n                    weather_icons: data.weather_icons,\n                    weather_descriptions: data.weather_descriptions,\n                    feelslike: data.feelslike,\n                    city: res.location.name\n                })\n            }\n            )\n    }\n\n    getWeatherForCity = async (city: string) => {\n        this.props.isLoading({ loading: true })\n        historyHelper.push(`/city/${this.state.citySearch}`);\n        // TODO: MOVE API KEY TO BACKEND\n        await getWeatherForCity(city)\n            // TODO: ERROR HANDLING, TYPES FOR RESPONSES\n            .catch((error: any) => {\n                console.error(error)\n                this.props.isLoading({ loading: false })\n            })\n            .then((res: any) => {\n                if (res.success === false) {\n                    historyHelper.push(`${Routes.cityNotFound}`);\n                } else if (res.current) {\n                    const data = res.current;\n\n                    this.props.whatWeather({\n                        temperature: data.temperature,\n                        weather_icons: data.weather_icons,\n                        weather_descriptions: data.weather_descriptions,\n                        feelslike: data.feelslike\n                    });\n\n                    this.getCompareWeather(city);\n                }\n            })\n    }\n\n    render() {\n        return (\n            <form\n                className={styles.form}\n                onSubmit={this.handleSubmit}\n            >\n                <InputField\n                    type=\"text\"\n                    name=\"citySearch\"\n                    value={this.state.citySearch}\n                    placeholder='City...'\n                    width='250px'\n                    handleOnChange={this.handleTextInputChange}\n                    hasErrors={this.state.cityHasErrors}\n                />\n                <SubmitButton\n                    disabled={this.props.loading.loading}\n                >\n                    Search\n                </SubmitButton>\n            </form >\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    loading: state.loading,\n})\n\nexport default connect(mapStateToProps, { whatCity, isLoading, whatWeather, compareWeather })(CitySearchForm);\n\n\n","import { IReduxCityState, CITY } from \"./types\";\n\n\nexport const whatCity = (city: IReduxCityState) => {\n    return {\n        type: CITY,\n        payload: city\n    }\n}","export interface IReduxCityState {\n    city: string;\n}\n\nexport const CITY = \"CITY\";\n\ninterface ICityAction {\n    type: typeof CITY;\n    payload: IReduxCityState;\n}\n\nexport type CityActionTypes = ICityAction;","import { IReduxWeatherState, IReduxCompareWeatherState, WEATHER, COMPARE_WEATHER } from \"./types\";\n\nexport const whatWeather = (weather: IReduxWeatherState) => {\n    return {\n        type: WEATHER,\n        payload: weather\n    }\n}\n\nexport const compareWeather = (weather: IReduxCompareWeatherState) => {\n    return {\n        type: COMPARE_WEATHER,\n        payload: weather\n    }\n}","export interface IReduxWeatherState {\n    temperature?: number;\n    weather_icons: string[];\n    weather_descriptions: string[];\n    feelslike?: number;\n}\nexport interface IReduxCompareWeatherState extends IReduxWeatherState {\n    city: string;\n}\n\nexport const WEATHER = \"WEATHER\";\nexport const COMPARE_WEATHER = \"COMPARE_WEATHER\";\n\ninterface IWeatherAction {\n    type: typeof WEATHER;\n    payload: IReduxWeatherState;\n}\n\ninterface ICompareWeatherAction {\n    type: typeof COMPARE_WEATHER;\n    payload: IReduxCompareWeatherState;\n}\n\nexport type WeatherActionTypes = IWeatherAction;\nexport type CompareWeatherActionTypes = ICompareWeatherAction;","import React from 'react';\nimport styles from './styles/AppLogo.module.scss';\n\nexport const AppLogo = () => {\n    return (\n        <a href='/' className={`f-h1 ${styles.h1}`}>Property Group weather</a>\n    )\n}\n","import React, { Component } from 'react';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { HomeView } from './homeView/HomeView';\nimport WeatherDetailsView from './weatherDetailsView/WeatherDetailsView';\nimport NotFoundView from './notFoundView/NotFoundView';\nimport { Routes } from '../common/routes';\nimport { historyHelper } from '../helpers/historyHelper';\nimport styles from './MainView.module.scss';\nimport CitySearchForm from './components/citySearchForm/CitySearchForm';\nimport { AppLogo } from './components/appLogo/AppLogo';\n\nexport class MainView extends Component {\n    private heightRef = React.createRef<HTMLDivElement>();\n\n    state = {\n        height: '100vh',\n        isIE: false,\n    }\n\n    componentDidMount = () => {\n        this.calculateMainHeight();\n    }\n    // TODO: add event listner on window resize (with debouncing) to adjust height without page reload\n    calculateMainHeight = () => {\n        const winHeight = window.innerHeight || Math.max(document.documentElement.clientHeight, document.body.clientHeight);\n        this.setState({\n            height: `${winHeight - this.heightRef.current!.clientHeight}px`\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <header ref={this.heightRef} className={styles.s_header}>\n                    <AppLogo />\n                    <CitySearchForm />\n                </header>\n                <main className={styles.s_main} style={{ height: this.state.height }}>\n                    <Router history={historyHelper}>\n                        <Switch>\n                            <Route exact path={Routes.mainView}>\n                                <HomeView />\n                            </Route>\n                            <Route exact path={Routes.weatherDetailsView} render={(params) => <WeatherDetailsView {...params} />} />\n\n                            <Route exact path={Routes.cityNotFound}>\n                                <NotFoundView />\n                            </Route>\n                            <Redirect from=\"*\" to={Routes.mainView} />\n                        </Switch>\n                    </Router>\n                </main>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport { MainView } from './views/MainView';\n\nconst App = () => {\n  return (\n    <MainView />\n  );\n}\n\nexport default App;\n\n","import { IReduxWeatherState, WEATHER, WeatherActionTypes, IReduxCompareWeatherState, COMPARE_WEATHER, CompareWeatherActionTypes } from './types';\n\nconst initialState: IReduxWeatherState = {\n    temperature: undefined,\n    weather_icons: [],\n    weather_descriptions: [],\n    feelslike: undefined\n}\n\nconst initialCompareState: IReduxCompareWeatherState = {\n    temperature: 0,\n    weather_icons: [],\n    weather_descriptions: [],\n    feelslike: 0,\n    city: ''\n}\n\nexport const weatherReducer = (state = initialState, action: WeatherActionTypes): IReduxWeatherState => {\n    switch (action.type) {\n        case WEATHER:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const compareWeatherReducer = (state = initialCompareState, action: CompareWeatherActionTypes): IReduxCompareWeatherState => {\n    switch (action.type) {\n        case COMPARE_WEATHER:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}","import { LOADING, IReduxLoadingState, LoadingActionTypes } from './types';\n\nconst initialState: IReduxLoadingState = {\n    loading: false\n}\n\nexport const loadingReducer = (state = initialState, action: LoadingActionTypes): IReduxLoadingState => {\n    switch (action.type) {\n        case LOADING: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}","\nimport { IReduxCityState, CITY, CityActionTypes } from './types';\n\nconst initialState: IReduxCityState = {\n    city: ''\n}\n\nexport const cityReducer = (state = initialState, action: CityActionTypes) => {\n    switch (action.type) {\n        case CITY:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}","import { weatherReducer, compareWeatherReducer } from './weather/reducers';\nimport { loadingReducer } from './loading/reducers';\nimport { cityReducer } from './city/reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nconst rootReducer = combineReducers({\n    loading: loadingReducer,\n    city: cityReducer,\n    weather: weatherReducer,\n    compareWeather: compareWeatherReducer\n})\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport const configureStore = () => {\n    const middlewares = [thunkMiddleware];\n    const middleWareEnhancer = applyMiddleware(...middlewares);\n\n    const store = createStore(\n        rootReducer,\n        composeWithDevTools(middleWareEnhancer)\n    )\n\n    return store;\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"WeatherDisplay_f-text__pHQaN\",\"f-text__semibold\":\"WeatherDisplay_f-text__semibold__1zKiI\",\"f-h1\":\"WeatherDisplay_f-h1__1XegH\",\"f-h2\":\"WeatherDisplay_f-h2__2SStf\",\"f-h3\":\"WeatherDisplay_f-h3__2pI_u\",\"weatherDisplay\":\"WeatherDisplay_weatherDisplay__11eSW\",\"weatherDisplay__icon\":\"WeatherDisplay_weatherDisplay__icon__3IHh6\",\"weatherDisplay__table\":\"WeatherDisplay_weatherDisplay__table__1xPXJ\",\"weatherDisplay__screen\":\"WeatherDisplay_weatherDisplay__screen__2d_1c\",\"weatherDisplay__header\":\"WeatherDisplay_weatherDisplay__header__lFfuS\",\"weatherDisplay__descr\":\"WeatherDisplay_weatherDisplay__descr__3n6Kh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"HomeView_f-text__3c8pd\",\"f-text__semibold\":\"HomeView_f-text__semibold__3DcD-\",\"f-h1\":\"HomeView_f-h1__1WlNf\",\"f-h2\":\"HomeView_f-h2__1Q93x\",\"f-h3\":\"HomeView_f-h3__O2k6h\",\"s_split\":\"HomeView_s_split__3bsm3\",\"s_split__left\":\"HomeView_s_split__left__2AvK2\",\"s_split__right\":\"HomeView_s_split__right__Kly57\",\"headersContainer\":\"HomeView_headersContainer__2JMsT\"};"],"sourceRoot":""}