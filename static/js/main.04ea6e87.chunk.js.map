{"version":3,"sources":["images/main-background.jpg","views/homeView/styles/HomeView.module.scss","views/MainView.module.scss","images/main-background-poor.jpg","views/components/citySearchForm/styles/CitySearchForm.module.scss","components/submitButton/styles/SubmitButton.module.scss","views/components/appLogo/styles/AppLogo.module.scss","serviceWorker.ts","common/routes.ts","views/homeView/HomeView.tsx","views/weatherDetailsView/WeatherDetailsView.tsx","views/notFoundView/NotFoundView.tsx","helpers/historyHelper.ts","components/inputField/InputField.tsx","components/submitButton/SubmitButton.tsx","views/components/citySearchForm/CitySearchForm.tsx","views/components/appLogo/AppLogo.tsx","views/MainView.tsx","App.tsx","index.tsx","components/inputField/styles/InputField.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","Routes","HomeView","state","src","componentDidMount","imageLoader","Image","bg","onload","setState","className","styles","sectionBackground","style","backgroundImage","this","bgPoor","headersContainer","Component","WeatherDetailsView","NotFoundView","historyHelper","createBrowserHistory","InputField","name","type","value","label","placeholder","width","handleOnChange","hasErrors","errorMessage","inputContainer","input","border","onChange","display","SubmitButton","children","button","CitySearchForm","citySearch","undefined","handleSubmit","e","preventDefault","console","log","handleTextInputChange","form","onSubmit","AppLogo","h1","MainView","s_header","s_main","history","exact","path","mainView","weatherDetailsView","cityNotFound","from","to","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04ea6e87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-background.a86f7f95.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"HomeView_f-text__3c8pd\",\"f-text__semibold\":\"HomeView_f-text__semibold__3DcD-\",\"f-h1\":\"HomeView_f-h1__1WlNf\",\"f-h2\":\"HomeView_f-h2__1Q93x\",\"f-h3\":\"HomeView_f-h3__O2k6h\",\"sectionBackground\":\"HomeView_sectionBackground__n-Yjb\",\"headersContainer\":\"HomeView_headersContainer__2JMsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"MainView_f-text__3GYp4\",\"f-text__semibold\":\"MainView_f-text__semibold__3TkFl\",\"f-h1\":\"MainView_f-h1__1ShTF\",\"f-h2\":\"MainView_f-h2__3ZAfp\",\"f-h3\":\"MainView_f-h3__25XrU\",\"s_header\":\"MainView_s_header__1KI6T\",\"s_main\":\"MainView_s_main__JRslI\"};","module.exports = __webpack_public_path__ + \"static/media/main-background-poor.fbadb786.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"CitySearchForm_f-text__XVaR8\",\"f-text__semibold\":\"CitySearchForm_f-text__semibold__2eM3i\",\"f-h1\":\"CitySearchForm_f-h1__3zPRL\",\"f-h2\":\"CitySearchForm_f-h2__2-Srt\",\"f-h3\":\"CitySearchForm_f-h3__3gIa1\",\"form\":\"CitySearchForm_form__3TCs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"SubmitButton_f-text__2NiIt\",\"f-text__semibold\":\"SubmitButton_f-text__semibold__35xWl\",\"f-h1\":\"SubmitButton_f-h1__2gY7E\",\"f-h2\":\"SubmitButton_f-h2__21St1\",\"f-h3\":\"SubmitButton_f-h3__-V_q4\",\"button\":\"SubmitButton_button__1rZSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"AppLogo_f-text__Bov47\",\"f-text__semibold\":\"AppLogo_f-text__semibold__5p4q-\",\"f-h1\":\"AppLogo_f-h1__38oQZ\",\"f-h2\":\"AppLogo_f-h2__3BVyB\",\"f-h3\":\"AppLogo_f-h3__3J639\",\"h1\":\"AppLogo_h1__35Xt_\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum Routes {\n    mainView = '/',\n    weatherDetailsView = '/city/:city',\n    cityNotFound = '/city-not-found/'\n}","import React, { Component } from 'react';\nimport bg from '../../images/main-background.jpg';\nimport bgPoor from '../../images/main-background-poor.jpg';\nimport styles from './styles/HomeView.module.scss';\n\nexport class HomeView extends Component {\n    state = {\n        src: null,\n    }\n\n    componentDidMount = () => {\n        const imageLoader = new Image();\n        imageLoader.src = bg;\n\n        imageLoader.onload = () => {\n            this.setState({ src: bg })\n        }\n    }\n    render() {\n        return (\n            <>\n                <section className={styles.sectionBackground} style={{ backgroundImage: this.state.src ? `url(${this.state.src}` : `url(${bgPoor}` }}>\n                    <article className={styles.headersContainer}>\n                        <h3 className={`f-h3`}>Do you want to know if you need an umbrella?</h3>\n                        <h2 className={`f-h2`}>Type a city name and check the weather in a second!</h2>\n                    </article>\n                </section>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport class WeatherDetailsView extends Component {\n    render() {\n        return (\n            <div>\n                hello from weather details\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport class NotFoundView extends Component {\n    render() {\n        return (\n            <div>\n                page not found\n            </div>\n        )\n    }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const historyHelper = createBrowserHistory();","import React from 'react'\nimport { IInputField } from './interfaces/IInputField';\nimport styles from './styles/InputField.module.scss';\n\nexport const InputField = ({ name, type, value, label, placeholder, width, handleOnChange, hasErrors, errorMessage }: IInputField) => {\n    return (\n        <>\n            <div className={styles.inputContainer}>\n                {label ? <label>{label}</label> : null}\n                <input\n                    className={`f-text ${styles.input}`}\n                    name={name}\n                    type={type}\n                    value={value}\n                    placeholder={placeholder ? placeholder : ''}\n                    style={{ width: width ? width : '', border: hasErrors ? '1px solid red' : '' }}\n                    onChange={handleOnChange}\n                />\n                <p className={`${styles.errorMessage}`} style={{ display: hasErrors ? 'block' : 'none' }}>{errorMessage}</p>\n            </div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { ISubmitButton } from './interfaces/ISubmitButton';\nimport styles from './styles/SubmitButton.module.scss';\n\nexport const SubmitButton = ({ children }: ISubmitButton) => {\n    return (\n        <button\n            className={`f-text__semibold ${styles.button}`}\n            type=\"submit\"\n        >\n            {children}\n        </button>\n    )\n}\n","import React, { Component, ChangeEvent } from 'react'\nimport { InputField } from '../../../components/inputField/InputField';\nimport styles from './styles/CitySearchForm.module.scss';\nimport { SubmitButton } from '../../../components/submitButton/SubmitButton';\n\nexport class CitySearchForm extends Component {\n    state = {\n        citySearch: undefined,\n    }\n    handleSubmit = (e: React.FormEvent): void => {\n        e.preventDefault();\n        console.log('elo')\n    }\n\n    handleTextInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        console.log(e);\n    }\n    render() {\n        return (\n            <form\n                className={styles.form}\n                onSubmit={this.handleSubmit}\n            >\n                <InputField\n                    type=\"text\"\n                    name=\"citySearch\"\n                    value={this.state.citySearch}\n                    placeholder='City...'\n                    width='250px'\n                    handleOnChange={this.handleTextInputChange}\n                    hasErrors={false}\n                    errorMessage='City name is required' />\n                <SubmitButton>\n                    Search\n                </SubmitButton>\n\n\n            </form >\n        )\n    }\n}\n","import React from 'react';\nimport styles from './styles/AppLogo.module.scss';\n\nexport const AppLogo = () => {\n    return (\n        <h1 className={`f-h1 ${styles.h1}`}>Property Group Weather</h1>\n    )\n}\n","import React, { Component } from 'react';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { HomeView } from './homeView/HomeView';\nimport { WeatherDetailsView } from './weatherDetailsView/WeatherDetailsView';\nimport { NotFoundView } from './notFoundView/NotFoundView';\nimport { Routes } from '../common/routes';\nimport { historyHelper } from '../helpers/historyHelper';\nimport styles from './MainView.module.scss';\nimport { CitySearchForm } from './components/citySearchForm/CitySearchForm';\nimport { AppLogo } from './components/appLogo/AppLogo';\n\nexport class MainView extends Component {\n    render() {\n        return (\n            <>\n                <header className={styles.s_header}>\n                    <AppLogo />\n                    <CitySearchForm />\n                </header>\n\n                <main className={styles.s_main}>\n                    <Router history={historyHelper}>\n                        <Switch>\n                            <Route exact path={Routes.mainView}>\n                                <HomeView />\n                            </Route>\n                            <Route exact path={Routes.weatherDetailsView}>\n                                <WeatherDetailsView />\n                            </Route>\n                            <Route exact path={Routes.cityNotFound}>\n                                <NotFoundView />\n                            </Route>\n                            <Redirect from=\"*\" to={Routes.mainView} />\n                        </Switch>\n                    </Router>\n                </main>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport { MainView } from './views/MainView';\n\nconst App: React.FC = () => {\n  return (\n      <MainView />\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"f-text\":\"InputField_f-text__2pABG\",\"f-text__semibold\":\"InputField_f-text__semibold__1n-vN\",\"f-h1\":\"InputField_f-h1__SVVkw\",\"f-h2\":\"InputField_f-h2__l9-TE\",\"f-h3\":\"InputField_f-h3__3lq9M\",\"inputContainer\":\"InputField_inputContainer__29TLO\",\"errorMessage\":\"InputField_errorMessage__2bUtJ\",\"input\":\"InputField_input__1IzVg\"};"],"sourceRoot":""}